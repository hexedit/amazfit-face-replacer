/*
    Amazfit Face Replacer - a tool for replacing Amazfit Bip faces in Mi Fit
    Copyright (C) 2018, IFProject / HexEdit, DriffeX, NitroOxid

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 27

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def versionMajor = versionProps['major'].toInteger()
        def versionMinor = versionProps['minor'].toInteger()
        def versionPatch = versionProps['patch'].toInteger()
        def versionBuild = versionProps['build'].toInteger()
        def versionNumber = versionProps['code'].toInteger()

        if (gradle.startParameter.taskNames.any { it.toLowerCase().contains('assemble') }) {
            versionProps['build'] = (versionBuild + 1).toString()
            if (gradle.startParameter.taskNames.any { it.toLowerCase().contains('release') }) {
                versionProps['patch'] = (versionPatch + 1).toString()
                versionProps['code'] = (versionNumber + 1).toString()
            }
            versionProps.store(versionPropsFile.newWriter(), null)
        }

        defaultConfig {
            applicationId "ru.ifproject.android.afr"
            minSdkVersion 21
            targetSdkVersion 27
            versionCode versionNumber
            versionName "$versionMajor.$versionMinor.$versionPatch"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
            vectorDrawables.useSupportLibrary = true
            setProperty("archivesBaseName", "$applicationId-$versionName")
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    implementation 'com.android.support:support-v4:27.0.2'
}
